public class Solution {
        public static boolean isValidBST(TreeNode root) {
                return validate(root, Integer.MIN_VALUE, Integer.MAX_VALUE);
        }
 
        public static boolean validate(TreeNode root, int min, int max) {
                if (root == null) return true;

                // not in range
                if (root.val <= min || root.val >= max) return false;
                 
                // left subtree must be < root.val && right subtree must be > root.val
                return validate(root.left, min, root.val) && validate(root.right, root.val, max);
        }
}

public boolean isValidBST(TreeNode root) {
   if (root == null) return true;
   Stack<TreeNode> stack = new Stack<>();
   TreeNode pre = null;
   while (root != null || !stack.isEmpty()) {
      while (root != null) {
         stack.push(root);
         root = root.left;
      }
      root = stack.pop();
      if(pre != null && root.val <= pre.val) return false;
      pre = root;
      root = root.right;
   }
   return true;
}